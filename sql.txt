Ex 1 :
CREATE TABLE student(
	student_id INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR(10) NOT NULL,
	year TINYINT NOT NULL DEFAULT "1",
	dept_no INTEGER NOT NULL,
	major VARCHAR(20)
);
CREATE TABLE department(
	dept_no INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	dept_name VARCHAR(20) NOT NULL UNIQUE,
	office VARCHAR(20) NOT NULL,
	office_tel VARCHAR(13)
);

ALTER TABLE student CHANGE COLUMN major major VARCHAR(40);
ALTER TABLE student ADD COLUMN gender VARCHAR(10);
ALTER TABLE department CHANGE COLUMN dept_name dept_name VARCHAR(40) NOT NULL;
ALTER TABLE department CHANGE COLUMN office office VARCHAR(30) NOT NULL;


Ex 2 :
INSERT INTO student(student_id, name, year, dept_no, major) VALUES (20070002, 'James Bond', 3, 4, 'Business Administration'), (20060001, 'Queenie', 4, 4, 'Business Administration'), (20030001, 'Reonardo', 4, 2, 'Electronic Engineering'), (20040003, 'Julia', 3, 2, 'Electronic Engineering'), (20060002, 'Roosevelt', 3, 1, 'Computer Science'), (20100002, 'Fearne', 3, 4, 'Business Administration'), (20110001, 'Chloe', 2, 1, 'Computer Science'), (20080003, 'Amy', 4, 3, 'Law'), (20040002, 'Selina', 4, 5, 'English Literature'), (20070001, 'Ellen', 4, 4, 'Business Administration'), (20100001, 'Kathy', 3, 4, 'Business Administration'), (20110002, 'Lucy', 2, 2, 'Electronic Engineering'), (20030002, 'Michelle', 5, 1, 'Computer Science'), (20070003, 'April', 4, 3, 'Law'), (20070005, 'Alicia', 2, 5, 'English Literature'), (20100003, 'Yullia', 3, 1, 'Computer Science'), (20070007, 'Ashlee', 2, 4, 'Business Administration')

INSERT INTO department(dept_name, office, office_tel) VALUES ('Computer Science', 'Engineering building', '02-3290-0123'), ('Electronic Engineering', 'Engineering building', '02-3290-2345'), ('Law', 'Law building', '02-3290-7896'), ( 'Business Administration', 'Administration building', '02-3290-1112'), ('English Literature', 'Literature building', '02-3290-4412');


Ex 3 :
1. UPDATE department SET dept_name='Electronic and Electrical Engineering' WHERE dept_name = 'Electronic engineering';
2. insert into department(dept_name, office, office_tel) VALUES ('Education', 'Education Building', '02-3290-2347');
3. update student set dept_no = 6, major = 'Education' where name = 'Chloe';
4. delete from student where name = 'Michelle';
5. delete from student where name = 'Fearne';


Ex 4 :
1. select * from student where major = 'Computer Science';
2. select student_id, year, major from student;
3. select * from student where year = '3';
4. select * from student where year = '1' or year = '2';
5. select * from student s 
join department d on d.dept_no = s.dept_no 
where major = 'Business Administration';


Ex 5 :
1. select * from student where student_id LIKE '%2007%';
2. select * from student order by student_id;
3. select major from student group by major having avg(year) > 3;
4. select * from student where major='Business Administration' and student_id LIKE '%2007%' LIMIT 2;


Ex 6 :
1. SELECT role from roles join movies on id = movie_id where name = 'Pi';
2. SELECT first_name, last_name, role FROM actors JOIN roles on roles.actor_id = actors.id JOIN movies on movies.id = roles.movie_idWHERE movies.name = â€˜Pi';
3. SELECT first_name, last_name from actors JOIN (SELECT m_one.actor_id FROM (SELECT actor_id FROM roles JOIN movies ON id = movie_idWHERE name = 'Kill Bill: Vol. 1')m_one JOIN (SELECT actor_id FROM roles JOIN movies ON id = movie_id WHERE name = 'Kill Bill: Vol. 2')m_two ON m_one.actor_id = m_two.actor_id)last_table ON id = last_table.actor_id;
4. SELECT first_name, last_name FROM actors JOIN (SELECT actor_id , COUNT(actor_id) FROM roles GROUP by actor_id ORDER byCOUNT(actor_id) DESC LIMIT 7)seven_actor ON seven_actor.actor_id = id;
5. SELECT genre FROM movies_genres GROUP BY genre ORDER BY COUNT(genre) DESC LIMIT 3;
6. SELECT first_name, last_name from directors join movies_directors md on id=md.director_id join movies_genres mg on mg.movie_id=md.movie_id where mg.genre='Thriller' group by first_name, last_name order by count(mg.genre) desc limit 1;


Ex 7.
1. SELECT grade from grades join courses on course_id=id where name='Computer Science 143';
2. SELECT s.name, grade from students s join grades on student_id=s.id join courses c on course_id=c.id where c.name='Computer Science 143' and grade <= 'B-';
3. SELECT s.name from students s join grades on student_id=s.id where grade <= 'B-';
4. SELECT c.name from courses c join grades g on g.course_id=c.id join students s on s.id=g.student_id group by c.name having count(c.name) >= 2;
